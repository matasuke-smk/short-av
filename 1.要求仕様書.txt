DMMアフィリエイト ハイブリッド型 動画閲覧サイト 要求仕様書

1. 目的
現在の課題：スワイプUIによるSEOの困難さ
解決目標：最新のWeb技術（Next.js/Nuxt.jsなど）を採用し、ユーザーが快適に動画を探せる「スワイプUI」と、検索エンジンからの安定した集客を実現する「SEO強化型記事ページ」を両立させる。

最終目標：アフィリエイト収益の最大化。

2. サイト構成要素と役割
サイトは大きく以下の2つのセクションで構成される。

| セクション | 役割 | URL構造（例） | 技術的要件 |

| A. スワイプUIセクション | 入口・エンゲージメント。ユーザーを瞬時につかみ、サイト滞在を促す。 | [ルート]/ または [ルート]/shorts | スムーズなアニメーション、高速な動画データ読み込み。 |

| B. 独自記事セクション | SEO・収益の核。検索エンジンからの集客と、購買意欲の高いユーザーへの情報提供。 | [ルート]/review/[スラッグ] または [ルート]/rank/[スラッグ] | 完全に静的なHTML生成（SSG）が必須。 |

3. 技術スタック（確定）

■ 基本情報
ドメイン名：short-av.com
DNS管理：Cloudflare（移管完了）
開発方針：完全放置運用を目指した自動化重視の設計

■ 確定した技術スタック
| 項目 | 採用技術 | 理由 |

| フロントエンド | Next.js 14 (App Router) | SSG/ISRによる高速表示、SEO最適化、Vercelとの完全統合 |

| バックエンド | Next.js API Routes | フロントエンドと統合、追加サーバー不要、保守性が高い |

| データベース | PostgreSQL (Supabase) | 無料プラン充実、リアルタイム機能、Next.jsとの相性良好 |

| ホスティング | Vercel | 自動デプロイ、無料SSL、グローバルCDN、cron機能標準搭載 |

| DMM API連携 | JavaScript用SDK | サーバーサイド（API Routes）で使用、アフィリエイトリンク自動生成 |

| 画像最適化 | next/image + Cloudflare | WebP自動変換、遅延読込、CDN配信による高速表示 |

| 認証・セキュリティ | Vercel Edge Functions | 年齢確認ゲート、地域制限などをエッジで高速処理 |

■ 開発環境
| 項目 | 技術 |

| 言語 | TypeScript | 型安全性、開発効率向上、バグ削減 |

| パッケージ管理 | pnpm | 高速、ディスク容量節約 |

| バージョン管理 | Git + GitHub | Vercel自動連携、pushで自動デプロイ |

| コード品質 | ESLint + Prettier | 自動フォーマット、コード品質維持 |

4. 機能要件
4-1. スワイプUIセクション (A) の機能

| ID | 機能名 | 詳細 | 必須度 |

| F101 | スムーズな縦スワイプ | スマートフォンでのTiktokやShortsに近い、滑らかでレスポンシブな縦方向スワイプを実現する。 | 必須 |

| F102 | 動画のプリロード | 現在表示中の動画の上下に位置する動画のデータを事前にロードし、スワイプ時の待ち時間をゼロにする。 | 必須 |

| F103 | 動的なURL更新 | スワイプで動画が切り替わる際、History API (pushState) を使用して、ブラウザのURLを動画固有のURLに動的に更新する。 | 必須 |

| F104 | 画面構成要素 | 動画ごとに以下の要素を常に表示する：動画タイトル、動画（サムネイルタップで再生）、バナー、各種ボタン、クレジット情報。 | 必須 |

| F105 | ボタンリンク | 詳細ボタン：DMM商品ページへのアフィリエイト直リンク（rel="sponsored"を付与）。 | 必須 |

| F106 | ボタンリンク | 関連記事ボタン：当該動画に関連する独自レビュー記事（セクションB）への内部リンク。 | 必須 |

4-2. 独自記事セクション (B) の機能
| ID | 機能名 | 詳細 | 必須度 |

| F201 | 静的サイト生成 (SSG) | 全てのレビュー記事、ランキング記事は、ビルド時に完全なHTMLファイルとして生成されること。 | 必須 |

| F202 | 充実した独自コンテンツ | 記事内に最低1,500文字以上の独自のレビュー/解説テキスト、関連画像、見出し（H2, H3）構造を含むこと。 | 必須 |

| F203 | DMMアフィリエイトリンク | 記事内に複数のDMM商品ページへのアフィリエイトリンク（バナー/テキスト）を設置する（rel="sponsored"を付与）。 | 必須 |

| F204 | 内部リンクの最適化 | 記事のフッターなどに、関連性の高い他の記事ページ（B）や、スワイプUIセクション（A）へのリンクを配置する。 | 必須 |

| F205 | コメント機能 | ユーザーのエンゲージメントを高めるためのコメント機能（Disqusなどの外部サービスでも可）。 | 任意 |

5. SEO要件（最重要）
全てのセクションBのページ、およびセクションAの動的URLには、以下の設定が必要です。

| ID | 要件 | 詳細 | 適用セクション |

| S101 | 個別のメタタグ | 全ページで<title>と<meta name="description">をユニークに設定する。キーワードを含んだ最適な内容とする。 | A, B |

| S102 | 構造化データ | 動画を紹介するページ（記事、スワイプ時の動的URL）には、VideoObjectのスキーママークアップを実装する。 | A, B |

| S103 | サイトマップ | セクションBで生成された全ての記事URLをリスト化したsitemap.xmlを作成し、Google Search Consoleに登録する。 | B |

| S104 | Core Web Vitals対策 | ページの表示速度（LCP, FID, CLS）を最適化し、Googleの推奨水準を満たすこと。特に動画の遅延読み込みを徹底する。 | A, B |

| S105 | モバイルフレンドリー | 全てのページはスマートフォンでの操作性に優れていること。 | A, B |

6. データ構造と管理
| 項目 | 必要なデータフィールド |

| 動画メタデータ | 動画タイトル、サムネイルURL、DMM商品URL（アフィリエイトリンク）、出演者、ジャンル、メーカー、クレジット情報 |

| レビュー記事データ | 記事ID、記事スラッグ（URLの一部）、レビュータイトル、レビュー本文（マークダウン/リッチテキスト対応）、対象動画ID（メタデータと紐付け）、関連動画IDリスト |

| システム設定 | サイト名、ロゴ、アフィリエイトID、グローバルなSEO設定（例：サイト全体のdescription） |

7. 成果物
 * フロントエンドソースコード一式（Next.js 14 + TypeScript）

 * データベース設計書

 * デプロイ手順書

 * sitemap.xml 生成システム

 * 自動更新システム（Vercel Cron）

8. コンプライアンス要件（必須）

DMMアフィリエイト参加規約および景品表示法に基づく必須事項

| ID | 要件 | 詳細 | 優先度 |

| C101 | ステマ規制対応 | 全記事・全ページに「広告」「PR」表記を視認できる位置に明示。一般消費者が広告であると明確に判別できること。 | 最優先 |

| C102 | 景表法遵守 | 優良誤認表示・有利誤認表示の禁止。「絶対」「100%」「No.1」などの断定表現を使用しない。根拠のないランキング表示の禁止。 | 最優先 |

| C103 | 年齢確認ゲート | アダルトコンテンツページへの初回アクセス時に年齢確認を実施。Cookie/LocalStorageで確認状態を保持。 | 必須 |

| C104 | アフィリエイトリンク表記 | 全てのDMM商品リンクに rel="sponsored" を付与。アフィリエイトリンクであることを明示。 | 必須 |

| C105 | プライバシーポリシー | Cookie使用、個人情報取り扱い、Google Analytics使用について明記したページを作成。 | 必須 |

| C106 | 利用規約ページ | サイト利用時の注意事項、免責事項を明記したページを作成。 | 必須 |

| C107 | 禁止表現リスト整備 | 景表法違反となる表現のチェックリストを作成。記事公開前に必ずチェック。 | 必須 |

■ 禁止表現の例
❌ 「絶対満足」「100%おすすめ」「必ず購入すべき」
❌ 「業界No.1」「最高の作品」（根拠がない場合）
❌ 「損はしない」「後悔しない」（断定表現）

⭕ 「人気の作品」「多くのユーザーに支持されている」
⭕ 「DMMランキング〇位（2025年〇月〇日時点）」（根拠明示）
⭕ 「個人的におすすめ」「私の好みに合った」（主観的表現）

9. DMM API連携要件

| ID | 要件 | 詳細 | 必須度 |

| A101 | SDK導入 | DMM JavaScript用SDKをサーバーサイド（API Routes）で使用。 | 必須 |

| A102 | 自動更新cron | 毎日午前3時にDMM APIから最新ランキングTOP100を取得。vercel.jsonでcron設定。 | 必須 |

| A103 | 差分更新ロジック | 既存DBと取得データを比較し、新規動画のみ追加。古い動画（30日以上経過）は自動削除。 | 必須 |

| A104 | ISR自動再生成 | データ更新時に関連ページをISRで自動再生成。手動ビルド不要。 | 必須 |

| A105 | エラーハンドリング | API接続失敗時のリトライ（最大3回）、エラーログ記録、Slack/メール通知。 | 必須 |

| A106 | レート制限対応 | DMM APIのレート制限に抵触しないよう、適切な間隔でリクエスト。 | 必須 |

■ 自動更新フロー
1. Vercel Cron が午前3時に /api/update-ranking を実行
2. DMM SDK で最新ランキングTOP100取得
3. データベースと差分比較
4. 新規動画をDBに追加、古い動画（30日以上）を削除
5. ISRで関連ページ（トップ、記事ページ）を自動再生成
6. sitemap.xml 自動更新
7. 完了通知をSlackまたはメールに送信（任意）

10. 記事品質管理要件

| ID | 要件 | 詳細 | 必須度 |

| Q101 | 公開前チェックリスト | 法的コンプライアンス、SEO、コンテンツ品質の3段階チェックを実施。 | 必須 |

| Q102 | 最低文字数 | 記事本文は最低1,500文字以上。オリジナルの感想・レビューを含む。 | 必須 |

| Q103 | 見出し構造 | H1（記事タイトル）、H2（大見出し）、H3（小見出し）の階層構造を適切に使用。 | 必須 |

| Q104 | 内部リンク | 1記事あたり最低3つの内部リンク（関連記事、スワイプUIセクション等）を配置。 | 必須 |

| Q105 | 画像alt属性 | 全ての画像にalt属性を設定。SEOとアクセシビリティを考慮。 | 必須 |

| Q106 | コピペチェック | 記事公開前にコピペチェックツールで確認。オリジナリティを担保。 | 推奨 |

■ 記事公開チェックリスト
□ 「広告」「PR」表記が記事冒頭にあるか
□ 誇大表現・虚偽表示がないか
□ タイトルに検索キーワードが含まれているか（30文字程度）
□ メタディスクリプションが設定されているか（120文字程度）
□ 見出し構造（H2→H3）が適切か
□ 本文が1,500文字以上あるか
□ 内部リンクが3つ以上あるか
□ アフィリエイトリンクに rel="sponsored" が付与されているか
□ 画像にalt属性が設定されているか
□ 誤字脱字がないか

11. コンテンツ戦略

■ キーワード戦略
- メインターゲット：AVタイトル、女優名、ジャンル
- ロングテール戦略：レズ、ゲイなどの同性コンテンツにも注力
- 検索ボリュームの調査：Googleキーワードプランナー、Ubersuggest等を活用

■ 更新頻度
- 自動更新：毎日午前3時に最新ランキングから差分取得
- 古い動画の削除：30日以上経過した動画を自動削除
- 記事作成：週5-10本の新規記事作成を目標（手動）

■ ジャンル別ページ展開
- 異性愛者向け：通常のAVコンテンツ
- レズビアン向け：女性同士のコンテンツ
- ゲイ向け：男性同士のコンテンツ
- その他ニッチジャンル：フェチ系、熟女系、素人系など

各ジャンルごとに専用ランディングページ（/genre/[slug]）を作成し、SEO最適化。

12. 開発フェーズ

■ Phase 1: MVP（最小実行可能製品）- 2-3週間
- Next.js プロジェクト初期セットアップ
- データベース設計・構築（Supabase）
- DMM API連携基盤構築
- 基本的な記事ページ（SSG）実装（10-20記事）
- 年齢確認ゲート実装
- 基本的なSEO設定（メタタグ、sitemap.xml）
- Vercelデプロイ・ドメイン連携（short-av.com）

■ Phase 2: スワイプUI実装 - 2週間
- スワイプUIコンポーネント実装
- 動画カード、プリロード機能
- History API連携
- セクションA⇔セクションBの相互リンク

■ Phase 3: 自動化・SEO強化 - 1-2週間
- Vercel Cronによる自動更新システム
- ISR実装
- 構造化データ（VideoObject）実装
- Core Web Vitals最適化
- Google Analytics 4、Search Console連携

■ Phase 4: 運用・改善 - 継続
- アクセス解析に基づく記事追加
- A/Bテスト（記事レイアウト、CTAボタン配置）
- パフォーマンスモニタリング
- コンバージョン率改善

13. デプロイ手順

■ 前提条件
- GitHubアカウントとリポジトリが作成済み
- Vercelアカウントが作成済み
- GitHubリポジトリとVercelが連携済み
- ローカル環境にGitがインストール済み

■ 自動デプロイフロー（推奨）
本プロジェクトでは、GitHubへのpushをトリガーにVercelが自動的にデプロイを実行します。

### 基本デプロイ手順

1. **コードの変更**
   - ローカル環境でコードを編集・修正

2. **変更をステージング**
   ```bash
   cd /path/to/short-av-project
   git add [変更したファイル]
   # または全ての変更を追加
   git add .
   ```

3. **コミットの作成**
   ```bash
   git commit -m "コミットメッセージ（変更内容を簡潔に記述）"
   ```

4. **GitHubへプッシュ**
   ```bash
   git push origin main
   ```

5. **Vercelでの自動デプロイ**
   - GitHubへのpush後、Vercelが自動的にデプロイを開始
   - デプロイ時間：通常2〜3分
   - デプロイ状況の確認：https://vercel.com/dashboard

### デプロイ確認手順

1. **Vercelダッシュボードで確認**
   - https://vercel.com/dashboard にアクセス
   - プロジェクトを選択
   - 「Deployments」タブで最新のデプロイ状況を確認
   - ステータスが「Ready」になれば完了

2. **本番環境での動作確認**
   - 本番URL（https://short-av.vercel.app または設定したカスタムドメイン）にアクセス
   - 強制リロード（Ctrl+Shift+R / Cmd+Shift+R）で最新版を確認
   - 変更内容が反映されているか確認

3. **問題発生時の対処**
   - Vercelダッシュボードの「Logs」タブでエラーログを確認
   - ビルドエラーの場合：ローカルで `npm run build` を実行して問題を特定
   - 前のバージョンにロールバックする場合：Vercelダッシュボードから過去のデプロイを選択して「Promote to Production」

### 環境変数の設定

デプロイ時に環境変数が必要な場合：

1. Vercelダッシュボードでプロジェクトを選択
2. 「Settings」→「Environment Variables」を開く
3. 必要な環境変数を追加：
   - `NEXT_PUBLIC_SUPABASE_URL`
   - `NEXT_PUBLIC_SUPABASE_ANON_KEY`
   - `DMM_API_ID`
   - `DMM_AFFILIATE_ID`
4. 環境変数追加後、手動で再デプロイが必要

### コミットメッセージの推奨フォーマット

わかりやすいコミット履歴のため、以下のフォーマットを推奨：

```
[種別] 簡潔な変更内容

詳細な説明（必要に応じて）
```

種別の例：
- `[機能追加]` - 新機能の追加
- `[修正]` - バグ修正
- `[改善]` - 既存機能の改善
- `[デザイン]` - UI/UXの変更
- `[リファクタ]` - コードの整理
- `[ドキュメント]` - ドキュメントの更新

例：
```bash
git commit -m "[修正] サムネイルの縦横比を4:3に固定"
git commit -m "[機能追加] 動画のランダム表示機能を実装"
```

### ローカル開発環境での確認

デプロイ前にローカルで動作確認を推奨：

```bash
# 開発サーバー起動
npm run dev

# ブラウザで確認
# http://localhost:3000
```

### トラブルシューティング

**デプロイが失敗する場合：**
- Vercelのビルドログを確認
- ローカルで `npm run build` を実行してビルドエラーを確認
- package.jsonの依存関係を確認

**変更が反映されない場合：**
- ブラウザのキャッシュをクリア（Ctrl+Shift+R）
- Vercelのデプロイが完了しているか確認
- シークレットモードで確認

**環境変数が読み込まれない場合：**
- Vercelの環境変数設定を確認
- `NEXT_PUBLIC_` プレフィックスの有無を確認
- 環境変数追加後に再デプロイを実行

この仕様書に基づき、開発を進めることで、高性能なUIと強力なSEO基盤を兼ね備えたアフィリエイトサイトが実現します。
